name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    services:
      eventstore:
        image: eventstore/eventstore:latest
        ports:
          - 2113:2113
          - 1113:1113
        env:
          EVENTSTORE_CLUSTER_SIZE: 1
          EVENTSTORE_RUN_PROJECTIONS: All
          EVENTSTORE_START_STANDARD_PROJECTIONS: true
          EVENTSTORE_EXT_TCP_PORT: 1113
          EVENTSTORE_HTTP_PORT: 2113
          EVENTSTORE_INSECURE: true
          EVENTSTORE_ENABLE_EXTERNAL_TCP: true
          EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP: true

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Wait for EventStore to be ready
      run: |
        timeout 60s bash -c 'until curl -f http://localhost:2113/health/live; do sleep 2; done'

    - name: Run tests
      run: |
        pytest tests/ -v --tb=short
      env:
        EVENTSTORE_URL: esdb://localhost:2113?tls=false

    - name: Run linting
      run: |
        ruff check py_micro_plumberd/ tests/
        black --check py_micro_plumberd/ tests/

    - name: Run type checking
      run: |
        mypy py_micro_plumberd/

  integration-test-csharp:
    runs-on: ubuntu-latest
    needs: test
    
    services:
      eventstore:
        image: eventstore/eventstore:latest
        ports:
          - 2113:2113
          - 1113:1113
        env:
          EVENTSTORE_CLUSTER_SIZE: 1
          EVENTSTORE_RUN_PROJECTIONS: All
          EVENTSTORE_START_STANDARD_PROJECTIONS: true
          EVENTSTORE_EXT_TCP_PORT: 1113
          EVENTSTORE_HTTP_PORT: 2113
          EVENTSTORE_INSECURE: true
          EVENTSTORE_ENABLE_EXTERNAL_TCP: true
          EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP: true

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Wait for EventStore to be ready
      run: |
        timeout 60s bash -c 'until curl -f http://localhost:2113/health/live; do sleep 2; done'

    - name: Run C# integration tests
      run: |
        cd tests/csharp
        dotnet test --verbosity normal
      env:
        EVENTSTORE_URL: esdb://localhost:2113?tls=false
        MODELING_EVOLUTION_SRC: ${{ github.workspace }}

  build:
    runs-on: ubuntu-latest
    needs: [test, integration-test-csharp]
    if: github.event_name == 'release'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: python -m twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  publish-test:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' && github.event.release.prerelease
    environment: test-pypi

    steps:
    - uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/

  publish-prod:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' && !github.event.release.prerelease
    environment: pypi

    steps:
    - uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}